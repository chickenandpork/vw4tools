<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool" kind="class" prot="public">
    <compoundname>org::smallfoot::vw4::VirtualWisdom4ClientTool</compoundname>
    <innerclass refid="interfaceorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1_1EntitySelector" prot="public">org::smallfoot::vw4::VirtualWisdom4ClientTool::EntitySelector</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad25ef6220eb54575157ab063bc63a0f0" prot="private" static="no" mutable="no">
        <type>org.w3c.dom.Document</type>
        <definition>org.w3c.dom.Document xmlDocument</definition>
        <argsstring></argsstring>
        <name>xmlDocument</name>
        <briefdescription>
<para>eventually used to hold an XML document when converting XML&lt;<ndash/>&gt;JSON&lt;<ndash/>&gt;XML </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="58" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a4ef055893be8838f513385e4c2f42700" prot="public" static="no" mutable="no">
        <type>VWImport</type>
        <definition>VWImport vwimport</definition>
        <argsstring></argsstring>
        <name>vwimport</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>singleton list of JSON-writable objects accessed through <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1acbeee875159f78e186965708e70dee94" kindref="member">vwimport()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="94" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="94" bodyend="-1"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="814" endline="1032">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ac3c495e48cdbca229137371be08ba04f" prot="protected" static="no" mutable="no">
        <type>TreeMap&lt; String, <ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref> &gt;</type>
        <definition>TreeMap&lt;String,Entity&gt; entities</definition>
        <argsstring></argsstring>
        <name>entities</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>local singleton array accessed from <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" kindref="member">entities()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="206" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="206" bodyend="-1"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="814" endline="1032">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aaa7580a75c1bf3c122ce5b4c001517c2" prot="protected" static="no" mutable="no">
        <type>Vector&lt; Pattern &gt;</type>
        <definition>Vector&lt;Pattern&gt; patterns</definition>
        <argsstring></argsstring>
        <name>patterns</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>local singleton array accessed from <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a09f298d19a33be899f5835657c747c5d" kindref="member">patterns()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="199" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1afb3f7acf97044713e2aa55c921c5cdb2" prot="protected" static="no" mutable="no">
        <type>WWNDescription</type>
        <definition>WWNDescription wwndesc</definition>
        <argsstring></argsstring>
        <name>wwndesc</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>local singleton array accessed from <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a43a8de962936ee9d82e0a70eeb9b1db6" kindref="member">wwndesc()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="213" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0f1b4c518fafff8a296bb632e57655ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VirtualWisdom4ClientTool</definition>
        <argsstring>(String xmlFile)</argsstring>
        <name>VirtualWisdom4ClientTool</name>
        <param>
          <type>String</type>
          <declname>xmlFile</declname>
        </param>
        <briefdescription>
<para>Class Constructor to create with an initial file to load. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlFile</parametername>
</parameternamelist>
<parameterdescription>
<para>File to load at start</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" kindref="member">load(String)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="80" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="80" bodyend="84"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" compoundref="VirtualWisdom4ClientTool_8java" startline="123" endline="137">VirtualWisdom4ClientTool.load</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a7991b30b52ad4d408df3575abc9b57ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VirtualWisdom4ClientTool</definition>
        <argsstring>()</argsstring>
        <name>VirtualWisdom4ClientTool</name>
        <briefdescription>
<para>Class Constructor with no initial file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="89" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="89" bodyend="92"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="814" endline="1032">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TreeMap&lt; String, <ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref> &gt;</type>
        <definition>TreeMap&lt;String,Entity&gt; entities</definition>
        <argsstring>()</argsstring>
        <name>entities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; singleton access for entities <simplesect kind="return"><para>collection of entities </para></simplesect>
</para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="207" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="207" bodyend="211"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" compoundref="VirtualWisdom4ClientTool_8java" startline="532" endline="586">VirtualWisdom4ClientTool.loadAndAbsorbFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void load</definition>
        <argsstring>(String filename)</argsstring>
        <name>load</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Wrapper to just load the file, spitting out exceptions and stacks as they occur. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>file to load </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="123" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="123" bodyend="137"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad9a051ba608e7fcb9adac39bc3946058" compoundref="VirtualWisdom4ClientTool_8java" startline="109" endline="116">VirtualWisdom4ClientTool._load</references>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="814" endline="1032">VirtualWisdom4ClientTool.main</referencedby>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0f1b4c518fafff8a296bb632e57655ca" compoundref="VirtualWisdom4ClientTool_8java" startline="80" endline="84">VirtualWisdom4ClientTool.VirtualWisdom4ClientTool</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a09f298d19a33be899f5835657c747c5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector&lt; Pattern &gt;</type>
        <definition>Vector&lt;Pattern&gt; patterns</definition>
        <argsstring>()</argsstring>
        <name>patterns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; singleton access for patterns <simplesect kind="return"><para>collection of patterns </para></simplesect>
</para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="200" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="200" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1afc3ee9b897e0757b6cd5c8289c9d4cc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String prettyJSON</definition>
        <argsstring>(VWImport v)</argsstring>
        <name>prettyJSON</name>
        <param>
          <type>VWImport</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Convenience function to generate a pretty-printed JSON text string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>VWImport object to markup </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pretty-printed JSON using ObjectWriter.withDefaultPrettyPrinter() or null if an exception occurs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="174" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="174" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a119573b242d96a5e64a7d340bcf14aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void save</definition>
        <argsstring>(String filename)</argsstring>
        <name>save</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Wrapper to just save the file, spitting out exceptions and stacks as they occur. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>filename to save into </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="155" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="155" bodyend="165"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36a7decd28b5e191bfe43c5562462785" compoundref="VirtualWisdom4ClientTool_8java" startline="144" endline="148">VirtualWisdom4ClientTool._save</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1adf6150f6553bb5d80b9c303817a94a9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setTarget</definition>
        <argsstring>(String ver)</argsstring>
        <name>setTarget</name>
        <param>
          <type>String</type>
          <declname>ver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="jvmopt_1_jvmopt000002"><xreftitle>JVM Options</xreftitle><xrefdescription><para><bold>debug.showCompatTarget</bold> causes the compat.target to be displayed when (re)set </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="60" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="60" bodyend="71"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a30b425bd5034c7ca39be7363c0e86cdc" compoundref="Entity_8java" startline="48">Entity.compatibilityVersion</references>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="814" endline="1032">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a43a8de962936ee9d82e0a70eeb9b1db6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>WWNDescription</type>
        <definition>WWNDescription wwndesc</definition>
        <argsstring>()</argsstring>
        <name>wwndesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; singleton access for wwndesc <simplesect kind="return"><para>wwndesc </para></simplesect>
</para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="214" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="214" bodyend="218"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" compoundref="VirtualWisdom4ClientTool_8java" startline="532" endline="586">VirtualWisdom4ClientTool.loadAndAbsorbFile</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad9a051ba608e7fcb9adac39bc3946058" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _load</definition>
        <argsstring>(String filename)</argsstring>
        <name>_load</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <exceptions> throws java.io.IOException     </exceptions>
        <briefdescription>
<para>Open a file. </para>        </briefdescription>
        <detaileddescription>
<para>This is actually a wrapper for the underlying file load</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>file to load </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>when File() encounters an error instaitating (typically path or permissions) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>: evaluate: mapper.configure(DeserializationConfig.Feature.FAIL_ON_UNKNOWN_PROPERTIES, false); </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="109" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="109" bodyend="116"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" compoundref="VirtualWisdom4ClientTool_8java" startline="123" endline="137">VirtualWisdom4ClientTool.load</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36a7decd28b5e191bfe43c5562462785" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _save</definition>
        <argsstring>(String filename)</argsstring>
        <name>_save</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <exceptions> throws java.lang.Exception     </exceptions>
        <briefdescription>
<para>Save the current XML Document to a new file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>filename to save into </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="144" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="144" bodyend="148"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a119573b242d96a5e64a7d340bcf14aa8" compoundref="VirtualWisdom4ClientTool_8java" startline="155" endline="165">VirtualWisdom4ClientTool.save</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void loadAndAbsorbFile</definition>
        <argsstring>(String f)</argsstring>
        <name>loadAndAbsorbFile</name>
        <param>
          <type>String</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>one-shot load a new file and absorb the contents: open the file and stream the contents at an array of parsers, the one with the best results wins; using that result, absorb all alias information, attempting to create parent storagecontroller(s) or hosts as resulting from absorbtion patterns </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>name of file to open</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="https://github.com/chickenandpork/fibrechannel-parsers/">https://github.com/chickenandpork/fibrechannel-parsers/</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="532" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="532" bodyend="586"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" compoundref="VirtualWisdom4ClientTool_8java" startline="207" endline="211">VirtualWisdom4ClientTool.entities</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a9a2326f35466e54c36c070829245c557" compoundref="Entity_8java" startline="146">Entity.name</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a1d15d718177c4f5411ce6ab339889fd4" compoundref="Entity_8java" startline="165" endline="168">Entity.setDescription</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a670f83b1f0f39a20e0fe60597032a367" compoundref="Entity_8java" startline="153" endline="156">Entity.setname</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a43a8de962936ee9d82e0a70eeb9b1db6" compoundref="VirtualWisdom4ClientTool_8java" startline="214" endline="218">VirtualWisdom4ClientTool.wwndesc</references>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="814" endline="1032">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a2e5ab2ec8715ec815edcea74375a493c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void loadAndRemoveFile</definition>
        <argsstring>(String f)</argsstring>
        <name>loadAndRemoveFile</name>
        <param>
          <type>String</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>one-shot load a new file and remove the contents from the internal list of leafEntities (HBAs, FAs) </para>        </briefdescription>
        <detaileddescription>
<para>Working on only the leaf entities, this uses the parser array to parse an input stream, and for each WWPN found, it removes that leaf entity from the system. It doesn&apos;t affect the child_entities of referring entities to allow for a loaded entity list to still refer to entities which are already on the target system.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>name of file to open</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="https://github.com/chickenandpork/fibrechannel-parsers/">https://github.com/chickenandpork/fibrechannel-parsers/</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="452" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="452" bodyend="519"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="814" endline="1032">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1acbeee875159f78e186965708e70dee94" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VWImport</type>
        <definition>VWImport vwimport</definition>
        <argsstring>()</argsstring>
        <name>vwimport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; singleton to access vwimport to allow for later post-process <simplesect kind="return"><para>vwimport instance, created if needed </para></simplesect>
</para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="95" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="95" bodyend="99"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="814" endline="1032">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aef7adefd80557ad76a8701f4e226118b" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void absorbPattern</definition>
        <argsstring>(String pattern)</argsstring>
        <name>absorbPattern</name>
        <param>
          <type>String</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Absorb a pattern for chunking together nickname patterns and execute it immediately on all current orphan LeafEntities. </para>        </briefdescription>
        <detaileddescription>
<para>The pattern given will be absorbed for the side-benefit of a user testing patterns against names using the <ndash/>checkpattern option. The pattern is also immediately executed, such that the following four cases occur for each orphan entity evaluated:</para><para><itemizedlist>
<listitem><para>the resulting name is not an entity that exists in the permanent nor hold space; create a hold-space entity which adopts this orphan</para></listitem><listitem><para>the resulting name is an entity which does adopt this orphan; orphan is adopted by named entity</para></listitem><listitem><para>the resulting name is an entity which does not adopt this orphan; entity does not adopt this one nor does a new entity get created in hold space</para></listitem><listitem><para>the resulting name matches the current orphan entity; create a hold-space entity which adopts this orphan and suffixes its name</para></listitem></itemizedlist>
</para><para>When complete, the &quot;hold&quot; space is evaluated to remove any &quot;parents&quot; for which there is only one child, thus eliminating lame pattern results before any next run</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>a String pattern to execute and absorb (into an internal array for use later) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="240" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="240" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad6eb6d2fc33de64afa2871acddaa348d" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref></type>
        <definition>Entity entityAccepting</definition>
        <argsstring>(Entity newguy)</argsstring>
        <name>entityAccepting</name>
        <param>
          <type><ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref></type>
          <declname>newguy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="404" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="404" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa0a47fb81ec7fd8f9d1d250ec7c24725" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String[]</type>
        <definition>String [] exercisePattern</definition>
        <argsstring>(String alias)</argsstring>
        <name>exercisePattern</name>
        <param>
          <type>String</type>
          <declname>alias</declname>
        </param>
        <briefdescription>
<para>Exercise all current chunking patterns against a given nickname. </para>        </briefdescription>
        <detaileddescription>
<para>Given a string assumed to be a hostname or alias, all patterns currently absorbed will be exercised to show the possible results in order they would be attempted. This is intended to allow in-situ pattern editing and verification rather than perfect knowledge of the regex system used.</para><para>As is assumed in the VW4 product, the regex is performed as: s/{pattern}/\1/ such that for a given pattern, the first capturing group is the result For example, given a pattern of &quot;^(.*).{5}$&quot;, the &quot;.{5}$&quot; matches the final 5 characters (5 wildcards before end-of-line), leaving the remainder within &quot;^(.*)&quot;. All but the final 5 characters are contained in that capture-grouping, so the result is all but the final 5 characters.</para><para>param alias a String nickname to exercise all patterns against </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="375" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="375" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aeb4c990279152389717ab187394330fa" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int finalizeEntities</definition>
        <argsstring>()</argsstring>
        <name>finalizeEntities</name>
        <briefdescription>
<para>Finalize absorbed Entities: for each entity, transfer from structured tree of Entities to vwimport array for writing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of items finalized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="710" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="710" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae4499ee0125936e10dde278b4a18c289" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void report</definition>
        <argsstring>()</argsstring>
        <name>report</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="416" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="416" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae9ce7560cea6782a7e3662cd9155487a" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void usage</definition>
        <argsstring>(String progname)</argsstring>
        <name>usage</name>
        <param>
          <type>String</type>
          <declname>progname</declname>
        </param>
        <briefdescription>
<para>Usage messages are useful to those of us with short memories as well (hey, I just need to add swap!) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>progname</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the program (args[0]) to print on a usage message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="767" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="767" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ac920712c8aa23e3b84790e1ff7fb297c" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void writeOrderedTuples</definition>
        <argsstring>(String name, EntitySelector sel)</argsstring>
        <name>writeOrderedTuples</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="interfaceorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1_1EntitySelector" kindref="compound">EntitySelector</ref></type>
          <declname>sel</declname>
        </param>
        <exceptions> throws java.io.IOException     </exceptions>
        <briefdescription>
<para>Export an &quot;OrderedTuples.csv&quot; file as a stopgap measure until proper JSON processing can be completed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>filename to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sel</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional selector-method </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>java.io.IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>when PrintStream throws an exception </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="733" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="733" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0ec044bae77579fea9b51e49c05ccbd3" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void writeOutputfile</definition>
        <argsstring>(String filename)</argsstring>
        <name>writeOutputfile</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Write an output file, finalizing from <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" kindref="member">entities()</ref> if required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of file to write </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="605" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="605" bodyend="703"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void main</definition>
        <argsstring>(String args[])</argsstring>
        <name>main</name>
        <param>
          <type>String</type>
          <declname>args</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Main function, as you can tell. </para>        </briefdescription>
        <detaileddescription>
<para>this function merely parses the command-line to dispatch actions to the meat of the meal above. I&apos;m using an actual GetOpt because, yes, I&apos;m a UNIX/C hack, re-using 3-decades-old knowledge, but this also preserves both extensibility and the ability to use longopts in scripts as a way to self-document what the tool&apos;s doing.</para><para>No real intelligence herein except the parse-and-redirect action.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>as you&apos;d expect, these are commandline arguments given when the jar is activated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Always always ALWAYS provide a quick reference and a version output</para><para><xrefsect id="cmdopt_1_cmdopt000001"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-H|<ndash/>help Show a simple help screen as a reminder of options which are understood by the application </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000002"><xreftitle>Commandline Options</xreftitle><xrefdescription><para><programlisting><codeline><highlight class="normal">java<sp/>-jar<sp/>vw4tools.jar<sp/>--help<sp/></highlight></codeline>
</programlisting></para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000003"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-V|<ndash/>version Show the current release version for reference </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000004"><xreftitle>Commandline Options</xreftitle><xrefdescription><para><programlisting><codeline><highlight class="normal">java<sp/>-jar<sp/>vw4tools.jar<sp/>--version</highlight></codeline>
<codeline><highlight class="normal"><sp/>0.9-121<sp/></highlight></codeline>
</programlisting></para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000005"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-n|<ndash/>nicknameout={file} Output nicknames from internal store </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000006"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-o|<ndash/>output={file} Output nicknames from internal store <ndash/>nicknameout and <ndash/>output are currently functionally identical; they both cause the internal nickname/entity base to be written out as JSON with the exception of a few &quot;magic&quot; filenames:</para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000007"><xreftitle>Commandline Options</xreftitle><xrefdescription><para><orderedlist>
<listitem><para><bold>schema.json</bold> will cause the current schema to be written </para></listitem></orderedlist>
</para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000008"><xreftitle>Commandline Options</xreftitle><xrefdescription><para><orderedlist>
<listitem><para><bold>orderedtuples.csv</bold> will cause an OrderedTuples.csv file to be written, suitable for post-processing via <ref refid="csv-to-json_8awk" kindref="compound">csv-to-json.awk</ref> but allowing a user to more easily edit CSV for fine-tuning </para></listitem></orderedlist>
</para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000009"><xreftitle>Commandline Options</xreftitle><xrefdescription><para><orderedlist>
<listitem><para><bold>orphanentities.csv</bold> will cause a CSV to be written listing all orphan entities. An &quot;Orphan Entity&quot; is an entity lacking a parent entity, such as an &quot;HBA Port&quot; without a &quot;host&quot; parent, or a &quot;iomodule&quot; without a parent &quot;storagearray&quot; entity.</para></listitem></orderedlist>
</para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000010"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>All other filename patterns will result in a JSON-formatted file</para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000011"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-N|<ndash/>nickname={file/uri} Import nicknames by parsing a text stream from various sources </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000012"><xreftitle>Commandline Options</xreftitle><xrefdescription><para><programlisting><codeline><highlight class="normal">java<sp/>-jar<sp/>vw4tools.jar<sp/>--nickname=switch44.zoneshow</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Parse<sp/>results<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>AliShowZoneParser:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Zones:<sp/>44</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Aliases:<sp/>112<sp/>(names<sp/>with<sp/>one<sp/>or<sp/>more<sp/>WWPNs)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Aliases:<sp/>136<sp/>(name/WWPN<sp/>tuples)<sp/></highlight></codeline>
</programlisting> In this example, a zone file was parsed by the AliShowZoneParser resulting in 112 nicknames; due to duplicate nicknames, there are actually 136 unique WWPN/alias tuples, which means that (136-112) 24 of the WWPNs have the same alias as other WWPNs</para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000013"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-i|<ndash/>input import an existing JSON file for later editing </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000014"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-r|<ndash/>read import an existing JSON file for later editing </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000015"><xreftitle>Commandline Options</xreftitle><xrefdescription><para><programlisting><codeline><highlight class="normal">java<sp/>-jar<sp/>vw4tools.jar<sp/>--read<sp/>working.json<sp/></highlight></codeline>
</programlisting></para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000016"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-R|<ndash/>remove Parse nicknames for removal from the internal nickname list </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000017"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-R|<ndash/>removenicknames Parse nicknames for removal from the internal nickname list</para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000018"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-t|<ndash/>target set a target version for JSON output. Defaults to latest supported. A value of 4.0.1 is converted to 40.1 internally due to float comparison and expected changed every bump of major/minor version</para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000019"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-!|<ndash/>report Summarize the current status of the internal nicknaes and pattern/collation coverage </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000020"><xreftitle>Commandline Options</xreftitle><xrefdescription><para><programlisting><codeline><highlight class="normal">java<sp/>-jar<sp/>vw4tools.jar<sp/>--nickname=switch44.zoneshow<sp/><sp/>--report</highlight></codeline>
<codeline><highlight class="normal">(vw4tools)<sp/>parsed<sp/>0<sp/>zones,<sp/>2<sp/>aliases<sp/>via<sp/>Alias4Parser</highlight></codeline>
<codeline><highlight class="normal">vw4tools<sp/>0.9-121</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>5<sp/>total<sp/><ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" kindref="member">entities</ref></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>4<sp/>leaf<sp/>nodes</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>2<sp/>orphans</highlight></codeline>
<codeline><highlight class="normal">50.00<sp/>%<sp/>coverage<sp/></highlight></codeline>
</programlisting> </para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000021"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-P|<ndash/>pattern= is used to provide an &quot;aggregating pattern&quot; to collect Orphan Entities into a container. An &quot;Orphan Entity&quot; is an entity which is not part of a larger device: an HBA not assigned to a host, or a FA not assigned to a storage array. Aggregating Patterns are evaluated immediately, so their order amidst other command options to import or remove entities is important. </para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000022"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>-p|<ndash/>checkpattern= is used to test an &quot;aggregating pattern&quot; against a certain nickname/alias. Although Aggregating Patterns are evaluated immediately, they&apos;re stored for testing as well, so even though we&apos;re giving a test alias after the pattern, it&apos;ll evaluate all loaded patterns against the alias: </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000023"><xreftitle>Commandline Options</xreftitle><xrefdescription><para><programlisting><codeline><highlight class="normal"><sp/>java<sp/>-jar<sp/>vw4tools.jar<sp/>--pattern=</highlight><highlight class="stringliteral">&quot;([^-]+)-[^-]+$&quot;</highlight><highlight class="normal"><sp/>--checkpattern=NetApp-123456<sp/>--checkpattern=UberServer_44_HBA0</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="stringliteral">&quot;NetApp-123456&quot;</highlight><highlight class="normal"><sp/>--&gt;<sp/></highlight><highlight class="stringliteral">&quot;NetApp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="stringliteral">&quot;UberServer_44_HBA0&quot;</highlight><highlight class="normal"><sp/>--&gt;<sp/></highlight><highlight class="stringliteral">&quot;UberServer_44_HBA0&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000024"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>in this example, the one pattern it tested against a new alias when the <ndash/>checkpattern is encountered; if there were two patterns, each pattern would be tried to the checkpattern sample when seen:</para></xrefdescription></xrefsect></para><para><xrefsect id="cmdopt_1_cmdopt000025"><xreftitle>Commandline Options</xreftitle><xrefdescription><para><programlisting><codeline><highlight class="normal"><sp/>java<sp/>-jar<sp/>vw4tools.jar<sp/>--pattern=</highlight><highlight class="stringliteral">&quot;([^-]+)-[^-]+$&quot;</highlight><highlight class="normal"><sp/>--pattern=</highlight><highlight class="stringliteral">&quot;^(.*)_hba(\d+)$&quot;</highlight><highlight class="normal"><sp/>--checkpattern=NetApp-123456<sp/>--checkpattern=UberServer_44_hba0</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="stringliteral">&quot;NetApp-123456&quot;</highlight><highlight class="normal"><sp/>--&gt;<sp/></highlight><highlight class="stringliteral">&quot;NetApp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="stringliteral">&quot;NetApp-123456&quot;</highlight><highlight class="normal"><sp/>--&gt;<sp/></highlight><highlight class="stringliteral">&quot;NetApp-123456&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="stringliteral">&quot;UberServer_44_HBA0&quot;</highlight><highlight class="normal"><sp/>--&gt;<sp/></highlight><highlight class="stringliteral">&quot;UberServer_44_hba0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="stringliteral">&quot;UberServer_44_HBA0&quot;</highlight><highlight class="normal"><sp/>--&gt;<sp/></highlight><highlight class="stringliteral">&quot;UberServer_44&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
</programlisting> </para></xrefdescription></xrefsect><xrefsect id="cmdopt_1_cmdopt000026"><xreftitle>Commandline Options</xreftitle><xrefdescription><para>in this example, two patterns ( &quot;([^-]+)-[^-]+$&quot; and &quot;^(.*)_hba(\d+)$&quot; ) are loaded; when &quot;NetApp-123456&quot; is given as a checkpattern, each is tried in turn, so we see that &quot;([^-]+)-[^-]+$&quot; converts &quot;NetApp-123456&quot; to &quot;NetApp&quot;, which means a bunch of devices &quot;NetApp-123456&quot;, &quot;NetApp-123457&quot;, &quot;NetApp-ABCDEF&quot; would be child entities of a larger entity &quot;NetApp&quot;. In essence, all the NetApp-* are collected into the same contailer called &quot;NetApp&quot;. Similarly, &quot;([^-]+)-[^-]+$&quot; and &quot;^(.*)_hba(\d+)$&quot; are tested against &quot;UberServer_44_hba0&quot; when the checkpattern is given, and we can see that &quot;([^-]+)-[^-]+$&quot; makes no difference to the value, but &quot;^(.*)_hba(\d+)$&quot; has the desired effect of chopping off the &quot;_hba#&quot; portion. </para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>need to check 3-decimal values such as &quot;-t 4.0.1.7&quot; (see also testsuite.at.in) </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="814" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="814" bodyend="1032"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a76d2b0133d83c43dfd8a19286ac55325" compoundref="Entity_8java" startline="158">Entity.description</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ac3c495e48cdbca229137371be08ba04f" compoundref="VirtualWisdom4ClientTool_8java" startline="206">VirtualWisdom4ClientTool.entities</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" compoundref="VirtualWisdom4ClientTool_8java" startline="123" endline="137">VirtualWisdom4ClientTool.load</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" compoundref="VirtualWisdom4ClientTool_8java" startline="532" endline="586">VirtualWisdom4ClientTool.loadAndAbsorbFile</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a2e5ab2ec8715ec815edcea74375a493c" compoundref="VirtualWisdom4ClientTool_8java" startline="452" endline="519">VirtualWisdom4ClientTool.loadAndRemoveFile</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a9a2326f35466e54c36c070829245c557" compoundref="Entity_8java" startline="146">Entity.name</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1adf6150f6553bb5d80b9c303817a94a9d" compoundref="VirtualWisdom4ClientTool_8java" startline="60" endline="71">VirtualWisdom4ClientTool.setTarget</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a7991b30b52ad4d408df3575abc9b57ae" compoundref="VirtualWisdom4ClientTool_8java" startline="89" endline="92">VirtualWisdom4ClientTool.VirtualWisdom4ClientTool</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a4ef055893be8838f513385e4c2f42700" compoundref="VirtualWisdom4ClientTool_8java" startline="94">VirtualWisdom4ClientTool.vwimport</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae2ffed10ae7714400e64ba55620d5e5c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>static String report</definition>
        <argsstring>(int orphans, int fostered, int total)</argsstring>
        <name>report</name>
        <param>
          <type>int</type>
          <declname>orphans</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fostered</declname>
        </param>
        <param>
          <type>int</type>
          <declname>total</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="410" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="410" bodyend="413"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool" kindref="compound">VirtualWisdom4ClientTool</ref> is a &quot;Swiss Army Knife&quot; of tools used when working with VirtualWisdom4. </para>    </briefdescription>
    <detaileddescription>
<para>The existence of these tools is not a judgement on VirtualWisdom4&apos;s proper Engineering; rather, an acceptance that a faster-response solution for the longer-tail of the normal curve is often helpful swapping QA delay for reduced customer friction.</para><para>As you&apos;d expect, there is no support for this. If it breaks, you may choose to keep both pieces :)</para><para>Ad-Hoc content for this utility-stack may appear at <ulink url="http://fcfae.com/">http://fcfae.com/</ulink> </para>    </detaileddescription>
    <collaborationgraph>
      <node id="109">
        <label>VirtualWisdom4ClientTool</label>
        <link refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool"/>
        <childnode refid="110" relation="usage">
          <edgelabel>vwimport</edgelabel>
        </childnode>
        <childnode refid="111" relation="usage">
          <edgelabel>patterns</edgelabel>
        </childnode>
        <childnode refid="112" relation="usage">
          <edgelabel>entities</edgelabel>
        </childnode>
        <childnode refid="113" relation="usage">
          <edgelabel>wwndesc</edgelabel>
        </childnode>
      </node>
      <node id="113">
        <label>WWNDescription</label>
      </node>
      <node id="112">
        <label>TreeMap&lt; String, org.smallfoot.vw4.Entity &gt;</label>
      </node>
      <node id="111">
        <label>Vector&lt; Pattern &gt;</label>
      </node>
      <node id="110">
        <label>VWImport</label>
      </node>
    </collaborationgraph>
    <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="57" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="56" bodyend="1033"/>
    <listofallmembers>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad9a051ba608e7fcb9adac39bc3946058" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>_load</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36a7decd28b5e191bfe43c5562462785" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>_save</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aef7adefd80557ad76a8701f4e226118b" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>absorbPattern</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ac3c495e48cdbca229137371be08ba04f" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>entities</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>entities</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad6eb6d2fc33de64afa2871acddaa348d" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>entityAccepting</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa0a47fb81ec7fd8f9d1d250ec7c24725" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>exercisePattern</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aeb4c990279152389717ab187394330fa" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>finalizeEntities</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>load</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>loadAndAbsorbFile</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a2e5ab2ec8715ec815edcea74375a493c" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>loadAndRemoveFile</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>main</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aaa7580a75c1bf3c122ce5b4c001517c2" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>patterns</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a09f298d19a33be899f5835657c747c5d" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>patterns</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1afc3ee9b897e0757b6cd5c8289c9d4cc4" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>prettyJSON</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae2ffed10ae7714400e64ba55620d5e5c" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>report</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae4499ee0125936e10dde278b4a18c289" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>report</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a119573b242d96a5e64a7d340bcf14aa8" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>save</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1adf6150f6553bb5d80b9c303817a94a9d" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>setTarget</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae9ce7560cea6782a7e3662cd9155487a" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>usage</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0f1b4c518fafff8a296bb632e57655ca" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>VirtualWisdom4ClientTool</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a7991b30b52ad4d408df3575abc9b57ae" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>VirtualWisdom4ClientTool</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a4ef055893be8838f513385e4c2f42700" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>vwimport</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1acbeee875159f78e186965708e70dee94" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>vwimport</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ac920712c8aa23e3b84790e1ff7fb297c" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>writeOrderedTuples</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0ec044bae77579fea9b51e49c05ccbd3" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>writeOutputfile</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1afb3f7acf97044713e2aa55c921c5cdb2" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>wwndesc</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a43a8de962936ee9d82e0a70eeb9b1db6" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>wwndesc</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad25ef6220eb54575157ab063bc63a0f0" prot="private" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>xmlDocument</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
