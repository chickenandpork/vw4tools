<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool" kind="class" prot="public">
    <compoundname>org::smallfoot::vw4::VirtualWisdom4ClientTool</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad25ef6220eb54575157ab063bc63a0f0" prot="private" static="no" mutable="no">
        <type>org.w3c.dom.Document</type>
        <definition>org.w3c.dom.Document xmlDocument</definition>
        <argsstring></argsstring>
        <name>xmlDocument</name>
        <briefdescription>
<para>eventually used to hold an XML document when converting XML&lt;<ndash/>&gt;JSON&lt;<ndash/>&gt;XML </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="55" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a9a3cd7caed5bd4b81c9383fc0e3c6e6f" prot="protected" static="no" mutable="no">
        <type>Vector&lt; <ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref> &gt;</type>
        <definition>Vector&lt;Entity&gt; entities</definition>
        <argsstring></argsstring>
        <name>entities</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>local singleton array accessed from <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a66e795032db830396eddba947597ac21" kindref="member">entities()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="350" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a774bc03344433229dc33ecdfbbb416a3" prot="protected" static="no" mutable="no">
        <type>Vector&lt; String &gt;</type>
        <definition>Vector&lt;String&gt; patterns</definition>
        <argsstring></argsstring>
        <name>patterns</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>local singleton array accessed from <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae02047a8c65611b9470268a74d4d25b5" kindref="member">patterns()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="343" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="343" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0f1b4c518fafff8a296bb632e57655ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VirtualWisdom4ClientTool</definition>
        <argsstring>(String xmlFile)</argsstring>
        <name>VirtualWisdom4ClientTool</name>
        <param>
          <type>String</type>
          <declname>xmlFile</declname>
        </param>
        <briefdescription>
<para>Class Constructor to create with an initial file to load. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlFile</parametername>
</parameternamelist>
<parameterdescription>
<para>File to load at start</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" kindref="member">load(String)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="64" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="64" bodyend="67"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" compoundref="VirtualWisdom4ClientTool_8java" startline="94" endline="104">VirtualWisdom4ClientTool.load</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a7991b30b52ad4d408df3575abc9b57ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VirtualWisdom4ClientTool</definition>
        <argsstring>()</argsstring>
        <name>VirtualWisdom4ClientTool</name>
        <briefdescription>
<para>Class Constructor with no initial file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="72" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="72" bodyend="74"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="436" endline="613">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a66e795032db830396eddba947597ac21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector&lt; <ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref> &gt;</type>
        <definition>Vector&lt;Entity&gt; entities</definition>
        <argsstring>()</argsstring>
        <name>entities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; singleton access for entities <simplesect kind="return"><para>collection of entities </para></simplesect>
</para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="351" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="351" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void load</definition>
        <argsstring>(String filename)</argsstring>
        <name>load</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Wrapper to just load the file, spitting out exceptions and stacks as they occur. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>file to load </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="94" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="94" bodyend="104"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad9a051ba608e7fcb9adac39bc3946058" compoundref="VirtualWisdom4ClientTool_8java" startline="83" endline="87">VirtualWisdom4ClientTool._load</references>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0f1b4c518fafff8a296bb632e57655ca" compoundref="VirtualWisdom4ClientTool_8java" startline="64" endline="67">VirtualWisdom4ClientTool.VirtualWisdom4ClientTool</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a9e0f542a9a12624390c9a7f7c032789b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ZoneParser</type>
        <definition>ZoneParser loadFile</definition>
        <argsstring>(String url, boolean verbose)</argsstring>
        <name>loadFile</name>
        <param>
          <type>String</type>
          <declname>url</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
<para>Load a file from the resource given to a WWN/Nickname vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of things loaded (used to trigger obsessive retries to get around choking org.apache.commons.io.input.TeeInputStream ) </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ulink url="file://">file://</ulink> resource of a file, ie &quot;file://sample.csv;wwn=1;nickname=2&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, parser results will be shown to stdout </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="169" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="169" bodyend="310"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a3ac515893512e150892f862b4cce8769" compoundref="VirtualWisdom4ClientTool_8java" startline="141" endline="159">VirtualWisdom4ClientTool.openStream</references>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" compoundref="VirtualWisdom4ClientTool_8java" startline="388" endline="406">VirtualWisdom4ClientTool.loadAndAbsorbFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae02047a8c65611b9470268a74d4d25b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector&lt; String &gt;</type>
        <definition>Vector&lt;String&gt; patterns</definition>
        <argsstring>()</argsstring>
        <name>patterns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; singleton access for patterns <simplesect kind="return"><para>collection of patterns </para></simplesect>
</para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="344" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="344" bodyend="348"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" compoundref="VirtualWisdom4ClientTool_8java" startline="388" endline="406">VirtualWisdom4ClientTool.loadAndAbsorbFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1afc3ee9b897e0757b6cd5c8289c9d4cc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String prettyJSON</definition>
        <argsstring>(VWImport v)</argsstring>
        <name>prettyJSON</name>
        <param>
          <type><ref refid="classorg_1_1smallfoot_1_1vw4_1_1VWImport" kindref="compound">VWImport</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Convenience function to generate a pretty-printed JSON text string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classorg_1_1smallfoot_1_1vw4_1_1VWImport" kindref="compound">VWImport</ref> object to markup </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pretty-printed JSON using ObjectWriter.withDefaultPrettyPrinter() or null if an exception occurs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="319" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="319" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a119573b242d96a5e64a7d340bcf14aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void save</definition>
        <argsstring>(String filename)</argsstring>
        <name>save</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Wrapper to just save the file, spitting out exceptions and stacks as they occur. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>filename to save into </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="122" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="122" bodyend="132"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36a7decd28b5e191bfe43c5562462785" compoundref="VirtualWisdom4ClientTool_8java" startline="111" endline="115">VirtualWisdom4ClientTool._save</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad9a051ba608e7fcb9adac39bc3946058" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _load</definition>
        <argsstring>(String filename)</argsstring>
        <name>_load</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <exceptions> throws java.lang.Exception     </exceptions>
        <briefdescription>
<para>Open a file. </para>        </briefdescription>
        <detaileddescription>
<para>This is actually a wrapper for the underlying file load</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>file to load </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="83" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="83" bodyend="87"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" compoundref="VirtualWisdom4ClientTool_8java" startline="94" endline="104">VirtualWisdom4ClientTool.load</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36a7decd28b5e191bfe43c5562462785" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _save</definition>
        <argsstring>(String filename)</argsstring>
        <name>_save</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <exceptions> throws java.lang.Exception     </exceptions>
        <briefdescription>
<para>Save the current XML Document to a new file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>filename to save into </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="111" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="111" bodyend="115"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a119573b242d96a5e64a7d340bcf14aa8" compoundref="VirtualWisdom4ClientTool_8java" startline="122" endline="132">VirtualWisdom4ClientTool.save</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void loadAndAbsorbFile</definition>
        <argsstring>(String f)</argsstring>
        <name>loadAndAbsorbFile</name>
        <param>
          <type>String</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>one-shot load a new file and absorb the contents: open the file and stream the contents at an array of parsers, the one with the best results wins; using that result, absorb all alias information, attempting to create parent storagecontroller(s) or hosts as resulting from absorbtion patterns </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>name of file to open</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="https://github.com/chickenandpork/fibrechannel-parsers/">https://github.com/chickenandpork/fibrechannel-parsers/</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="388" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="388" bodyend="406"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a9e0f542a9a12624390c9a7f7c032789b" compoundref="VirtualWisdom4ClientTool_8java" startline="169" endline="310">VirtualWisdom4ClientTool.loadFile</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae02047a8c65611b9470268a74d4d25b5" compoundref="VirtualWisdom4ClientTool_8java" startline="344" endline="348">VirtualWisdom4ClientTool.patterns</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a3ac515893512e150892f862b4cce8769" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>java.io.InputStream</type>
        <definition>java.io.InputStream openStream</definition>
        <argsstring>(String uri)</argsstring>
        <name>openStream</name>
        <param>
          <type>String</type>
          <declname>uri</declname>
        </param>
        <exceptions> throws java.io.FileNotFoundException, java.net.MalformedURLException, java.io.IOException     </exceptions>
        <briefdescription>
<para>Produce an InputStream for the given uri in a way that corresponds to the url protocol. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>InputStream ready to offer back the data </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ulink url="file://">file://</ulink> resource of a file, ie &quot;file:///sample.csv&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="141" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="141" bodyend="159"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a9e0f542a9a12624390c9a7f7c032789b" compoundref="VirtualWisdom4ClientTool_8java" startline="169" endline="310">VirtualWisdom4ClientTool.loadFile</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aef7adefd80557ad76a8701f4e226118b" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void absorbPattern</definition>
        <argsstring>(String pattern)</argsstring>
        <name>absorbPattern</name>
        <param>
          <type>String</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Absorb a pattern for chunking together nickname patterns. </para>        </briefdescription>
        <detaileddescription>
<para>Hosts will absorb new matches at a top-level (host-&gt;hba); storage will absorb a pattern by force into a second-tier (storagearray -&gt; storagecontroller). This will let devices with non-intuitive combinations (ie SVC nodes in an iogroup don&apos;t have any matching WWPN parts). Not sure how far this will snowball.</para><para>param pattern a String pattern to absorb (into an internal array for use later) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="366" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa5ba138629cfc2767edfb0a9c507ff9c" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref></type>
        <definition>Entity entityAccepting</definition>
        <argsstring>(String wwn, String name)</argsstring>
        <name>entityAccepting</name>
        <param>
          <type>String</type>
          <declname>wwn</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="371" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="371" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae9ce7560cea6782a7e3662cd9155487a" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void usage</definition>
        <argsstring>(String progname)</argsstring>
        <name>usage</name>
        <param>
          <type>String</type>
          <declname>progname</declname>
        </param>
        <briefdescription>
<para>Usage messages are useful to those of us with short memories as well (hey, I just need to add swap!) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>progname</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the program (args[0]) to print on a usage message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="414" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="414" bodyend="421"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void main</definition>
        <argsstring>(String args[])</argsstring>
        <name>main</name>
        <param>
          <type>String</type>
          <declname>args</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Main function, as you can tell. </para>        </briefdescription>
        <detaileddescription>
<para>this function merely parses the command-line to dispatch actions to the meat of the meal above. I&apos;m using an actual GetOpt because, yes, I&apos;m a UNIX/C hack, re-using 3-decades-old knowledge, but this also preserves both extensibility and the ability to use longopts in scripts as a way to self-document what the tool&apos;s doing.</para><para>No real intelligence herein except the parse-and-redirect action.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>as you&apos;d expect, these are commandline arguments given when the jar is activated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="436" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="436" bodyend="613"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a7991b30b52ad4d408df3575abc9b57ae" compoundref="VirtualWisdom4ClientTool_8java" startline="72" endline="74">VirtualWisdom4ClientTool.VirtualWisdom4ClientTool</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool" kindref="compound">VirtualWisdom4ClientTool</ref> is a &quot;Swiss Army Knife&quot; of tools used when working with VirtualWisdom4. </para>    </briefdescription>
    <detaileddescription>
<para>The existence of these tools is not a judgement on VirtualWisdom4&apos;s proper Engineering; rather, an acceptance that a faster-response solution for the longer-tail of the normal curve is often helpful swapping QA delay for reduced customer friction.</para><para>As you&apos;d expect, there is no support for this. If it breaks, you may choose to keep both pieces :)</para><para>Ad-Hoc content for this utility-stack may appear at <ulink url="http://fcfae.com/">http://fcfae.com/</ulink> </para>    </detaileddescription>
    <collaborationgraph>
      <node id="42">
        <label>VirtualWisdom4ClientTool</label>
        <link refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool"/>
        <childnode refid="43" relation="usage">
          <edgelabel>entities</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>patterns</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>Vector&lt; org.smallfoot.vw4.Entity &gt;</label>
      </node>
      <node id="44">
        <label>Vector&lt; String &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="54" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="53" bodyend="614"/>
    <listofallmembers>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad9a051ba608e7fcb9adac39bc3946058" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>_load</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36a7decd28b5e191bfe43c5562462785" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>_save</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aef7adefd80557ad76a8701f4e226118b" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>absorbPattern</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a9a3cd7caed5bd4b81c9383fc0e3c6e6f" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>entities</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a66e795032db830396eddba947597ac21" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>entities</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa5ba138629cfc2767edfb0a9c507ff9c" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>entityAccepting</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>load</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>loadAndAbsorbFile</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a9e0f542a9a12624390c9a7f7c032789b" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>loadFile</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>main</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a3ac515893512e150892f862b4cce8769" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>openStream</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a774bc03344433229dc33ecdfbbb416a3" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>patterns</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae02047a8c65611b9470268a74d4d25b5" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>patterns</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1afc3ee9b897e0757b6cd5c8289c9d4cc4" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>prettyJSON</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a119573b242d96a5e64a7d340bcf14aa8" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>save</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae9ce7560cea6782a7e3662cd9155487a" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>usage</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0f1b4c518fafff8a296bb632e57655ca" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>VirtualWisdom4ClientTool</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a7991b30b52ad4d408df3575abc9b57ae" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>VirtualWisdom4ClientTool</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad25ef6220eb54575157ab063bc63a0f0" prot="private" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>xmlDocument</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
