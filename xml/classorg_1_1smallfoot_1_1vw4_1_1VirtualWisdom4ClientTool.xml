<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool" kind="class" prot="public">
    <compoundname>org::smallfoot::vw4::VirtualWisdom4ClientTool</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad25ef6220eb54575157ab063bc63a0f0" prot="private" static="no" mutable="no">
        <type>org.w3c.dom.Document</type>
        <definition>org.w3c.dom.Document xmlDocument</definition>
        <argsstring></argsstring>
        <name>xmlDocument</name>
        <briefdescription>
<para>eventually used to hold an XML document when converting XML&lt;<ndash/>&gt;JSON&lt;<ndash/>&gt;XML </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="57" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a4ef055893be8838f513385e4c2f42700" prot="public" static="no" mutable="no">
        <type>VWImport</type>
        <definition>VWImport vwimport</definition>
        <argsstring></argsstring>
        <name>vwimport</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>singleton list of JSON-writable objects accessed through <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1acbeee875159f78e186965708e70dee94" kindref="member">vwimport()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="78" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="78" bodyend="-1"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="498" endline="630">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ac3c495e48cdbca229137371be08ba04f" prot="protected" static="no" mutable="no">
        <type>TreeMap&lt; String, <ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref> &gt;</type>
        <definition>TreeMap&lt;String,Entity&gt; entities</definition>
        <argsstring></argsstring>
        <name>entities</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>local singleton array accessed from <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" kindref="member">entities()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="190" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="190" bodyend="-1"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="498" endline="630">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aaa7580a75c1bf3c122ce5b4c001517c2" prot="protected" static="no" mutable="no">
        <type>Vector&lt; Pattern &gt;</type>
        <definition>Vector&lt;Pattern&gt; patterns</definition>
        <argsstring></argsstring>
        <name>patterns</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>local singleton array accessed from <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a09f298d19a33be899f5835657c747c5d" kindref="member">patterns()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="183" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1afb3f7acf97044713e2aa55c921c5cdb2" prot="protected" static="no" mutable="no">
        <type>WWNDescription</type>
        <definition>WWNDescription wwndesc</definition>
        <argsstring></argsstring>
        <name>wwndesc</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>local singleton array accessed from <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a43a8de962936ee9d82e0a70eeb9b1db6" kindref="member">wwndesc()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="197" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0f1b4c518fafff8a296bb632e57655ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VirtualWisdom4ClientTool</definition>
        <argsstring>(String xmlFile)</argsstring>
        <name>VirtualWisdom4ClientTool</name>
        <param>
          <type>String</type>
          <declname>xmlFile</declname>
        </param>
        <briefdescription>
<para>Class Constructor to create with an initial file to load. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xmlFile</parametername>
</parameternamelist>
<parameterdescription>
<para>File to load at start</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" kindref="member">load(String)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="66" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="66" bodyend="69"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" compoundref="VirtualWisdom4ClientTool_8java" startline="107" endline="121">VirtualWisdom4ClientTool.load</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a7991b30b52ad4d408df3575abc9b57ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VirtualWisdom4ClientTool</definition>
        <argsstring>()</argsstring>
        <name>VirtualWisdom4ClientTool</name>
        <briefdescription>
<para>Class Constructor with no initial file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="74" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="74" bodyend="76"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="498" endline="630">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TreeMap&lt; String, <ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref> &gt;</type>
        <definition>TreeMap&lt;String,Entity&gt; entities</definition>
        <argsstring>()</argsstring>
        <name>entities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; singleton access for entities <simplesect kind="return"><para>collection of entities </para></simplesect>
</para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="191" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="191" bodyend="195"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" compoundref="VirtualWisdom4ClientTool_8java" startline="279" endline="327">VirtualWisdom4ClientTool.loadAndAbsorbFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void load</definition>
        <argsstring>(String filename)</argsstring>
        <name>load</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Wrapper to just load the file, spitting out exceptions and stacks as they occur. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>file to load </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="107" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="107" bodyend="121"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad9a051ba608e7fcb9adac39bc3946058" compoundref="VirtualWisdom4ClientTool_8java" startline="93" endline="100">VirtualWisdom4ClientTool._load</references>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="498" endline="630">VirtualWisdom4ClientTool.main</referencedby>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0f1b4c518fafff8a296bb632e57655ca" compoundref="VirtualWisdom4ClientTool_8java" startline="66" endline="69">VirtualWisdom4ClientTool.VirtualWisdom4ClientTool</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a09f298d19a33be899f5835657c747c5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector&lt; Pattern &gt;</type>
        <definition>Vector&lt;Pattern&gt; patterns</definition>
        <argsstring>()</argsstring>
        <name>patterns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; singleton access for patterns <simplesect kind="return"><para>collection of patterns </para></simplesect>
</para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="184" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="184" bodyend="188"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" compoundref="VirtualWisdom4ClientTool_8java" startline="279" endline="327">VirtualWisdom4ClientTool.loadAndAbsorbFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1afc3ee9b897e0757b6cd5c8289c9d4cc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String prettyJSON</definition>
        <argsstring>(VWImport v)</argsstring>
        <name>prettyJSON</name>
        <param>
          <type>VWImport</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Convenience function to generate a pretty-printed JSON text string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>VWImport object to markup </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pretty-printed JSON using ObjectWriter.withDefaultPrettyPrinter() or null if an exception occurs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="158" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="158" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a119573b242d96a5e64a7d340bcf14aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void save</definition>
        <argsstring>(String filename)</argsstring>
        <name>save</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Wrapper to just save the file, spitting out exceptions and stacks as they occur. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>filename to save into </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="139" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="139" bodyend="149"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36a7decd28b5e191bfe43c5562462785" compoundref="VirtualWisdom4ClientTool_8java" startline="128" endline="132">VirtualWisdom4ClientTool._save</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a43a8de962936ee9d82e0a70eeb9b1db6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>WWNDescription</type>
        <definition>WWNDescription wwndesc</definition>
        <argsstring>()</argsstring>
        <name>wwndesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; singleton access for wwndesc <simplesect kind="return"><para>wwndesc </para></simplesect>
</para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="198" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="198" bodyend="202"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" compoundref="VirtualWisdom4ClientTool_8java" startline="279" endline="327">VirtualWisdom4ClientTool.loadAndAbsorbFile</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad9a051ba608e7fcb9adac39bc3946058" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _load</definition>
        <argsstring>(String filename)</argsstring>
        <name>_load</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <exceptions> throws java.io.IOException     </exceptions>
        <briefdescription>
<para>Open a file. </para>        </briefdescription>
        <detaileddescription>
<para>This is actually a wrapper for the underlying file load</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>file to load </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>when File() encounters an error instaitating (typically path or permissions) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>: evaluate: mapper.configure(DeserializationConfig.Feature.FAIL_ON_UNKNOWN_PROPERTIES, false); </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="93" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="93" bodyend="100"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" compoundref="VirtualWisdom4ClientTool_8java" startline="107" endline="121">VirtualWisdom4ClientTool.load</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36a7decd28b5e191bfe43c5562462785" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _save</definition>
        <argsstring>(String filename)</argsstring>
        <name>_save</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <exceptions> throws java.lang.Exception     </exceptions>
        <briefdescription>
<para>Save the current XML Document to a new file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>filename to save into </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="128" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="128" bodyend="132"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a119573b242d96a5e64a7d340bcf14aa8" compoundref="VirtualWisdom4ClientTool_8java" startline="139" endline="149">VirtualWisdom4ClientTool.save</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void loadAndAbsorbFile</definition>
        <argsstring>(String f)</argsstring>
        <name>loadAndAbsorbFile</name>
        <param>
          <type>String</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>one-shot load a new file and absorb the contents: open the file and stream the contents at an array of parsers, the one with the best results wins; using that result, absorb all alias information, attempting to create parent storagecontroller(s) or hosts as resulting from absorbtion patterns </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>name of file to open</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="https://github.com/chickenandpork/fibrechannel-parsers/">https://github.com/chickenandpork/fibrechannel-parsers/</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="279" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="279" bodyend="327"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" compoundref="VirtualWisdom4ClientTool_8java" startline="191" endline="195">VirtualWisdom4ClientTool.entities</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a9a2326f35466e54c36c070829245c557" compoundref="Entity_8java" startline="71">Entity.name</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a09f298d19a33be899f5835657c747c5d" compoundref="VirtualWisdom4ClientTool_8java" startline="184" endline="188">VirtualWisdom4ClientTool.patterns</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a1d15d718177c4f5411ce6ab339889fd4" compoundref="Entity_8java" startline="86" endline="89">Entity.setDescription</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a670f83b1f0f39a20e0fe60597032a367" compoundref="Entity_8java" startline="76" endline="79">Entity.setname</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a43a8de962936ee9d82e0a70eeb9b1db6" compoundref="VirtualWisdom4ClientTool_8java" startline="198" endline="202">VirtualWisdom4ClientTool.wwndesc</references>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="498" endline="630">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1acbeee875159f78e186965708e70dee94" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VWImport</type>
        <definition>VWImport vwimport</definition>
        <argsstring>()</argsstring>
        <name>vwimport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; singleton to access vwimport to allow for later post-process </para>        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="79" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="79" bodyend="83"/>
        <referencedby refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="VirtualWisdom4ClientTool_8java" startline="498" endline="630">VirtualWisdom4ClientTool.main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aef7adefd80557ad76a8701f4e226118b" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void absorbPattern</definition>
        <argsstring>(String pattern)</argsstring>
        <name>absorbPattern</name>
        <param>
          <type>String</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Absorb a pattern for chunking together nickname patterns. </para>        </briefdescription>
        <detaileddescription>
<para>Hosts will absorb new matches at a top-level (host-&gt;hba); storage will absorb a pattern by force into a second-tier (storagearray -&gt; storagecontroller). This will let devices with non-intuitive combinations (ie SVC nodes in an iogroup don&apos;t have any matching WWPN parts). Not sure how far this will snowball.</para><para>param pattern a String pattern to absorb (into an internal array for use later) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="213" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad6eb6d2fc33de64afa2871acddaa348d" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref></type>
        <definition>Entity entityAccepting</definition>
        <argsstring>(Entity newguy)</argsstring>
        <name>entityAccepting</name>
        <param>
          <type><ref refid="classorg_1_1smallfoot_1_1vw4_1_1Entity" kindref="compound">Entity</ref></type>
          <declname>newguy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="263" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa0a47fb81ec7fd8f9d1d250ec7c24725" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String[]</type>
        <definition>String [] exercisePattern</definition>
        <argsstring>(String alias)</argsstring>
        <name>exercisePattern</name>
        <param>
          <type>String</type>
          <declname>alias</declname>
        </param>
        <briefdescription>
<para>Exercise all current chunking patterns against a given nickname. </para>        </briefdescription>
        <detaileddescription>
<para>Given a string assumed to be a hostname or alias, all patterns currently absorbed will be exercised to show the possible results in order they would be attempted. This is intended to allow in-situ pattern editing and verification rather than perfect knowledge of the regex system used.</para><para>As is assumed in the VW4 product, the regex is performed as: s/{pattern}/\1/ such that for a given pattern, the first capturing group is the result For example, given a pattern of &quot;^(.*).{5}$&quot;, the &quot;.{5}$&quot; matches the final 5 characters (5 wildcards before end-of-line), leaving the remainder within &quot;^(.*)&quot;. All but the final 5 characters are contained in that capture-grouping, so the result is all but the final 5 characters.</para><para>param alias a String nickname to exercise all patterns against </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="234" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="234" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aeb4c990279152389717ab187394330fa" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int finalizeEntities</definition>
        <argsstring>()</argsstring>
        <name>finalizeEntities</name>
        <briefdescription>
<para>Finalize absorbed Entities: for each entity, transfer from structured tree of Entities to vwimport array for writing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of items finalized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="422" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="422" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae9ce7560cea6782a7e3662cd9155487a" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void usage</definition>
        <argsstring>(String progname)</argsstring>
        <name>usage</name>
        <param>
          <type>String</type>
          <declname>progname</declname>
        </param>
        <briefdescription>
<para>Usage messages are useful to those of us with short memories as well (hey, I just need to add swap!) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>progname</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the program (args[0]) to print on a usage message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="476" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="476" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae7f58b7f70ac5ad9229b3556469d5328" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void writeOrderedTuples</definition>
        <argsstring>(String name)</argsstring>
        <name>writeOrderedTuples</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <exceptions> throws java.io.IOException     </exceptions>
        <briefdescription>
<para>Export an &quot;OrderedTuples.csv&quot; file as a stopgap measure until proper JSON processing can be completed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>filename to write </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>java.io.IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>when PrintStream throws an exception </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="444" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="444" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0ec044bae77579fea9b51e49c05ccbd3" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void writeOutputfile</definition>
        <argsstring>(String filename)</argsstring>
        <name>writeOutputfile</name>
        <param>
          <type>String</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Write an output file, finalizing from <ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" kindref="member">entities()</ref> if required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of file to write </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="335" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="335" bodyend="415"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void main</definition>
        <argsstring>(String args[])</argsstring>
        <name>main</name>
        <param>
          <type>String</type>
          <declname>args</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Main function, as you can tell. </para>        </briefdescription>
        <detaileddescription>
<para>this function merely parses the command-line to dispatch actions to the meat of the meal above. I&apos;m using an actual GetOpt because, yes, I&apos;m a UNIX/C hack, re-using 3-decades-old knowledge, but this also preserves both extensibility and the ability to use longopts in scripts as a way to self-document what the tool&apos;s doing.</para><para>No real intelligence herein except the parse-and-redirect action.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>as you&apos;d expect, these are commandline arguments given when the jar is activated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="498" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="498" bodyend="630"/>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a76d2b0133d83c43dfd8a19286ac55325" compoundref="Entity_8java" startline="81">Entity.description</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ac3c495e48cdbca229137371be08ba04f" compoundref="VirtualWisdom4ClientTool_8java" startline="190">VirtualWisdom4ClientTool.entities</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" compoundref="VirtualWisdom4ClientTool_8java" startline="107" endline="121">VirtualWisdom4ClientTool.load</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" compoundref="VirtualWisdom4ClientTool_8java" startline="279" endline="327">VirtualWisdom4ClientTool.loadAndAbsorbFile</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1Entity_1a9a2326f35466e54c36c070829245c557" compoundref="Entity_8java" startline="71">Entity.name</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a7991b30b52ad4d408df3575abc9b57ae" compoundref="VirtualWisdom4ClientTool_8java" startline="74" endline="76">VirtualWisdom4ClientTool.VirtualWisdom4ClientTool</references>
        <references refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a4ef055893be8838f513385e4c2f42700" compoundref="VirtualWisdom4ClientTool_8java" startline="78">VirtualWisdom4ClientTool.vwimport</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool" kindref="compound">VirtualWisdom4ClientTool</ref> is a &quot;Swiss Army Knife&quot; of tools used when working with VirtualWisdom4. </para>    </briefdescription>
    <detaileddescription>
<para>The existence of these tools is not a judgement on VirtualWisdom4&apos;s proper Engineering; rather, an acceptance that a faster-response solution for the longer-tail of the normal curve is often helpful swapping QA delay for reduced customer friction.</para><para>As you&apos;d expect, there is no support for this. If it breaks, you may choose to keep both pieces :)</para><para>Ad-Hoc content for this utility-stack may appear at <ulink url="http://fcfae.com/">http://fcfae.com/</ulink> </para>    </detaileddescription>
    <collaborationgraph>
      <node id="51">
        <label>VirtualWisdom4ClientTool</label>
        <link refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool"/>
        <childnode refid="52" relation="usage">
          <edgelabel>vwimport</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>patterns</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>entities</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>wwndesc</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>WWNDescription</label>
      </node>
      <node id="54">
        <label>TreeMap&lt; String, org.smallfoot.vw4.Entity &gt;</label>
      </node>
      <node id="53">
        <label>Vector&lt; Pattern &gt;</label>
      </node>
      <node id="52">
        <label>VWImport</label>
      </node>
    </collaborationgraph>
    <location file="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" line="56" column="1" bodyfile="/Users/allan.clark/src/vw4tools/java/VirtualWisdom4ClientTool.java" bodystart="55" bodyend="631"/>
    <listofallmembers>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad9a051ba608e7fcb9adac39bc3946058" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>_load</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36a7decd28b5e191bfe43c5562462785" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>_save</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aef7adefd80557ad76a8701f4e226118b" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>absorbPattern</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ac3c495e48cdbca229137371be08ba04f" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>entities</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa9ab77e799e869cf9da3d339e124f6c4" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>entities</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad6eb6d2fc33de64afa2871acddaa348d" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>entityAccepting</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aa0a47fb81ec7fd8f9d1d250ec7c24725" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>exercisePattern</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aeb4c990279152389717ab187394330fa" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>finalizeEntities</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0d686f1044a2e8727b12e6e4921e0e8f" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>load</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a36539eb2d98fcdcedd7dc2088acfeef2" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>loadAndAbsorbFile</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a75988cf84fc6ee7a2ebff36e363021aa" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>main</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1aaa7580a75c1bf3c122ce5b4c001517c2" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>patterns</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a09f298d19a33be899f5835657c747c5d" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>patterns</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1afc3ee9b897e0757b6cd5c8289c9d4cc4" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>prettyJSON</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a119573b242d96a5e64a7d340bcf14aa8" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>save</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae9ce7560cea6782a7e3662cd9155487a" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>usage</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0f1b4c518fafff8a296bb632e57655ca" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>VirtualWisdom4ClientTool</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a7991b30b52ad4d408df3575abc9b57ae" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>VirtualWisdom4ClientTool</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a4ef055893be8838f513385e4c2f42700" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>vwimport</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1acbeee875159f78e186965708e70dee94" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>vwimport</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ae7f58b7f70ac5ad9229b3556469d5328" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>writeOrderedTuples</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a0ec044bae77579fea9b51e49c05ccbd3" prot="package" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>writeOutputfile</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1afb3f7acf97044713e2aa55c921c5cdb2" prot="protected" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>wwndesc</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1a43a8de962936ee9d82e0a70eeb9b1db6" prot="public" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>wwndesc</name></member>
      <member refid="classorg_1_1smallfoot_1_1vw4_1_1VirtualWisdom4ClientTool_1ad25ef6220eb54575157ab063bc63a0f0" prot="private" virt="non-virtual"><scope>org::smallfoot::vw4::VirtualWisdom4ClientTool</scope><name>xmlDocument</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
