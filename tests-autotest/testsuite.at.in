AT_INIT()


AT_SETUP(version)
dnl      ------

AT_CHECK([java -jar $abs_top_builddir/convjars/@PACKAGE@.jar -V], 0, [vw4tool version @VERSION@-@BUILDID@ (latest: "2012-12-03 1.0")
], [])

AT_CHECK([java -jar $abs_top_builddir/convjars/@PACKAGE@.jar --version], 0, [vw4tool version @VERSION@-@BUILDID@ (latest: "2012-12-03 1.0")
], [])

AT_CLEANUP()



AT_SETUP(verify pattern behavior)
dnl      -----------------------

AT_CHECK([java -Ddebug.showPattern=true -jar $abs_top_builddir/convjars/@PACKAGE@.jar --pattern="^(.*)_hba(\\d+)$" --checkpattern=NetApp-123456 --checkpattern=Oracle01 --checkpattern=Oracle01_hba0], 0, [stdout], [stderr])

AT_CHECK([java -jar $abs_top_builddir/convjars/@PACKAGE@.jar --pattern="^(.*)_hba(\\d+)$" --checkpattern=NetApp-123456 --checkpattern=Oracle01 --checkpattern=Oracle01_hba0], 0, ["NetApp-123456" --> "NetApp-123456"
"Oracle01" --> "Oracle01"
"Oracle01_hba0" --> "Oracle01"
], [stderr])

AT_CHECK([java -jar $abs_top_builddir/convjars/@PACKAGE@.jar --pattern="^(.*)_(hba|fc|fa|fab)(\\d+)$" --checkpattern=NetApp-123456 --checkpattern=Oracle01 --checkpattern=Oracle01_hba0], 0, ["NetApp-123456" --> "NetApp-123456"
"Oracle01" --> "Oracle01"
"Oracle01_hba0" --> "Oracle01"
], [stderr])

AT_CLEANUP()



AT_SETUP(alias4file to json via java)
dnl      ---------------------------

AT_DATA([alias4file.csv], ["WWN",50:0A:09:85:98:12:34:56,NetApp-123456,Storage
"WWN",50:0A:09:86:98:12:34:56,NetApp-123456,Storage
"WWN",10:00:00:00:c9:12:34:56,Oracle01,Server
"WWN",10:00:00:00:c9:12:34:57,Oracle01,Server
])

dnl bogus test converted to an actual test
AT_CHECK([java -Ddebug.verboseTokenizer=Alias4Parser -jar $abs_top_builddir/convjars/@PACKAGE@.jar --pattern="([[^_]]+)_[[^_]]+$" --nickname=alias4file.csv --nicknameout=alias4file.json], 0, [stdout], [stderr])
dnl "|| true" to ignore the aberrant unpredictable error code
AT_CHECK([grep -v 'FYI (non-fatal): version-check: state' stderr || true], 0, [], [])
AT_CHECK([grep -v 'parsed 0 zones, 0 aliases' stdout | tee copyout|sort -u], 0, [(vw4tools) parsed 0 zones, 4 aliases via Alias4Parser
check pattern ([[^_]]+)_[[^_]]+$ for acceptance of 10000000c9123456, Oracle01
check pattern ([[^_]]+)_[[^_]]+$ for acceptance of 10000000c9123457, Oracle01
check pattern ([[^_]]+)_[[^_]]+$ for acceptance of 500a098598123456, NetApp-123456
check pattern ([[^_]]+)_[[^_]]+$ for acceptance of 500a098698123456, NetApp-123456
], [])

AT_CHECK([cat alias4file.json], 0, [[{
  "entities" : [ {
    "child_entities" : {
      "add" : [ "500a098598123456" ]
    },
    "description" : "500a098598123456,NetApp-123456 converted via Alias4Parser from alias4file.csv",
    "edit_type" : "add",
    "name" : "NetApp-123456",
    "tags" : [ "@PACKAGE@-@VERSION@-@BUILDID@" ],
    "type" : "storageport"
  }, {
    "child_entities" : {
      "add" : [ "500a098698123456" ]
    },
    "description" : "500a098698123456,NetApp-123456 converted via Alias4Parser from alias4file.csv",
    "edit_type" : "add",
    "name" : "NetApp-123456_456",
    "tags" : [ "@PACKAGE@-@VERSION@-@BUILDID@" ],
    "type" : "storageport"
  }, {
    "description" : "10000000c9123456,Oracle01 converted via Alias4Parser from alias4file.csv",
    "edit_type" : "add",
    "name" : "Oracle01",
    "tags" : [ "@PACKAGE@-@VERSION@-@BUILDID@" ],
    "type" : "hba"
  }, {
    "description" : "10000000c9123457,Oracle01 converted via Alias4Parser from alias4file.csv",
    "edit_type" : "add",
    "name" : "Oracle01_457",
    "tags" : [ "@PACKAGE@-@VERSION@-@BUILDID@" ],
    "type" : "hba"
  } ],
  "version" : "1"
}]], [])

AT_CLEANUP()



AT_SETUP(csv-to-json awk script)
dnl      ----------------------

dnl 50:0A:09:85:98:D2:6B:D5 NetApp-d26bd5-iGrp1-0e
AT_DATA([c2v01.csv], [NetApp-123456,array,50:0A:09:85:98:12:34:56
NetApp-123456,array,50:0A:09:86:98:12:34:56
Oracle01,host,10:00:00:00:c9:12:34:56
Oracle01,host,10:00:00:00:c9:12:34:57
])

AT_CHECK([@AWK@ -f $abs_top_builddir/scripts/csv-to-json.awk c2v01.csv], 0, [[{
  "version" : 1,
   "entities" : [
   {
      "name" : "NetApp-123456",
      "type" : "storagearray",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add",
      "child_entities" : { "add" : [ "NetApp-123456-00", "NetApp-123456-01" ] }
   },
   {
      "name" : "NetApp-123456-00",
      "type" : "iomodule",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add",
      "child_entities" : { "add" : [ "50:0A:09:86:98:12:34:56" ] }
   },
   {
      "name" : "NetApp-123456-01",
      "type" : "iomodule",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add",
      "child_entities" : { "add" : [ "50:0A:09:85:98:12:34:56" ] }
   },
   {
      "name" : "Oracle01",
      "type" : "host",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add",
      "child_entities" : { "add" : [ "Oracle01-00", "Oracle01-01" ] }
   },
   {
      "name" : "Oracle01-00",
      "type" : "hba",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add", 
      "child_entities" : { "add" : [ "10:00:00:00:c9:12:34:56" ] }
   },
   {
      "name" : "Oracle01-01",
      "type" : "hba",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add", 
      "child_entities" : { "add" : [ "10:00:00:00:c9:12:34:57" ] }
   }
]
}
]], [])

AT_DATA([c2v02.csv], [Oracle01,host,10:00:00:00:c9:12:34:56,Oracle01-A
Oracle01,host,10:00:00:00:c9:12:34:57,Oracle01-B
])

AT_CHECK([@AWK@ -f $abs_top_builddir/scripts/csv-to-json.awk c2v02.csv], 0, [[{
  "version" : 1,
   "entities" : [
   {
      "name" : "Oracle01",
      "type" : "host",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add",
      "child_entities" : { "add" : [ "Oracle01-A", "Oracle01-B" ] }
   },
   {
      "name" : "Oracle01-A",
      "type" : "hba",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add", 
      "child_entities" : { "add" : [ "10:00:00:00:c9:12:34:56" ] }
   },
   {
      "name" : "Oracle01-B",
      "type" : "hba",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add", 
      "child_entities" : { "add" : [ "10:00:00:00:c9:12:34:57" ] }
   }
]
}
]], [])

AT_DATA([c2v03.csv], [NetApp-123456,array,50:0A:09:85:98:12:34:56,NetApp-Blue-iGrp1-0e
NetApp-123456,array,50:0A:09:86:98:12:34:56,NetApp-Blue-iGrp1-0f
])

AT_CHECK([@AWK@ -f $abs_top_builddir/scripts/csv-to-json.awk c2v03.csv], 0, [[{
  "version" : 1,
   "entities" : [
   {
      "name" : "NetApp-123456",
      "type" : "storagearray",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add",
      "child_entities" : { "add" : [ "NetApp-Blue-iGrp1-0f", "NetApp-Blue-iGrp1-0e" ] }
   },
   {
      "name" : "NetApp-Blue-iGrp1-0f",
      "type" : "iomodule",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add", 
      "child_entities" : { "add" : [ "50:0A:09:86:98:12:34:56" ] }
   },
   {
      "name" : "NetApp-Blue-iGrp1-0e",
      "type" : "iomodule",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add", 
      "child_entities" : { "add" : [ "50:0A:09:85:98:12:34:56" ] }
   }
]
}
]], [])

AT_CHECK([@AWK@ -v SKIPARRAY="barkbark" -f $abs_top_builddir/scripts/csv-to-json.awk c2v03.csv], 0, [[{
  "version" : 1,
   "entities" : [
   {
      "name" : "NetApp-Blue-iGrp1-0f",
      "type" : "iomodule",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add", 
      "child_entities" : { "add" : [ "50:0A:09:86:98:12:34:56" ] }
   },
   {
      "name" : "NetApp-Blue-iGrp1-0e",
      "type" : "iomodule",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add", 
      "child_entities" : { "add" : [ "50:0A:09:85:98:12:34:56" ] }
   }
]
}
]], [])

AT_CLEANUP()



AT_SETUP(csv-to-json awk script dirtydata)
dnl      --------------------------------

AT_DATA([c2v01.csv], ["NetApp-123456",array,50:0A:09:85:98:12:34:56
" Oracle01",host,"10:00:00:00:c9:12:34:56"
])

AT_CHECK([@AWK@ -f $abs_top_builddir/scripts/csv-to-json.awk c2v01.csv], 0, [[{
  "version" : 1,
   "entities" : [
   {
      "name" : "NetApp-123456",
      "type" : "storagearray",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add",
      "child_entities" : { "add" : [ "NetApp-123456-00" ] }
   },
   {
      "name" : "NetApp-123456-00",
      "type" : "iomodule",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add",
      "child_entities" : { "add" : [ "50:0A:09:85:98:12:34:56" ] }
   },
   {
      "name" : "Oracle01",
      "type" : "host",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add",
      "child_entities" : { "add" : [ "Oracle01-00" ] }
   },
   {
      "name" : "Oracle01-00",
      "type" : "hba",
      "tags" : [ "csv2json Import" ],
      "edit_type" : "add",
      "child_entities" : { "add" : [ "10:00:00:00:c9:12:34:56" ] }
   }
]
}
]], [])

AT_CLEANUP()



AT_SETUP(read sample DAD to create JSON)
dnl      ------------------------------

AT_CHECK([java -Ddebug.consistentVersion -jar $abs_top_builddir/convjars/vw4tools.jar -N abs_top_srcdir/samples/simple.devicealias], 0, [stdout], [stderr])

dnl "|| true" to ignore the aberrant unpredictable error code
AT_CHECK([grep -v 'FYI (non-fatal): version-check: state' stderr || true], 0, [], [])

AT_CHECK([grep -c ' 6 aliases via DeviceAliasParser' stdout], 0, [1
], [])

AT_CHECK([java -Ddebug.consistentVersion -jar $abs_top_builddir/convjars/vw4tools.jar --pattern="([[^_]]+)_hba[[0-9]]+$" -N abs_top_srcdir/samples/simple.devicealias -oOrderedTuples.csv], 0, [stdout], [stderr])

dnl "|| true" to ignore the aberrant unpredictable error code
AT_CHECK([grep -v 'FYI (non-fatal): version-check: state' stderr || true], 0, [], [])

AT_CHECK([cat OrderedTuples.csv], 0, [oracle10_hba0,host,21000024ff123456
oracle10_hba1,host,22000024ff123456
server44_hba0,host,10000000c9123456
server44_hba1,host,10000000c9123457
vmax-18641-fa06a0,array,5000097201234554
vmax-18641-fa07a0,array,5000097201234558
], [])

AT_CLEANUP()



AT_SETUP(dupe name in nicknames)
dnl      ----------------------

AT_DATA([alias4file.csv], ["WWN",50:0A:09:85:98:12:34:56,NetApp-123456,Storage
"WWN",50:0A:09:86:98:12:34:56,NetApp-123456,Storage
"WWN",10:00:00:00:c9:12:34:56,Oracle01,Server
"WWN",10:00:00:00:c9:12:34:57,Oracle01,Server
])

AT_CHECK([java -jar $abs_top_builddir/convjars/vw4tools.jar -N alias4file.csv], 0, [stdout], [stderr])

dnl "|| true" to ignore the aberrant unpredictable error code
AT_CHECK([grep -v 'FYI (non-fatal): version-check: state' stderr || true], 0, [], [])

AT_CHECK([grep -c ' 4 aliases via Alias4Parser' stdout], 0, [1
], [])

AT_CHECK([java -jar $abs_top_builddir/convjars/vw4tools.jar -N alias4file.csv -oOrderedTuples.csv], 0, [stdout], [stderr])

dnl "|| true" to ignore the aberrant unpredictable error code
AT_CHECK([grep -v 'FYI (non-fatal): version-check: state' stderr || true], 0, [], [])

AT_CHECK([cat OrderedTuples.csv], 0, [NetApp-123456,array,500a098598123456
NetApp-123456_456,array,500a098698123456
Oracle01,host,10000000c9123456
Oracle01_457,host,10000000c9123457
], [])

AT_CLEANUP()



AT_SETUP(write json sample sample01)
dnl      --------------------------

AT_CHECK([java -jar $abs_top_builddir/convjars/vw4tools.jar -Tsample01 -o], 0, [[{
  "entities" : [ {
    "description" : "sample01 test entity",
    "edit_type" : "add",
    "itl_patterns" : [ {
      "edit_type" : "add",
      "initiator" : "1000002590123456"
    } ],
    "name" : "sample01_itl",
    "type" : "application"
  } ],
  "version" : "1"
}
]],[stderr])

AT_CLEANUP()



AT_SETUP(write json sample sample02)
dnl      --------------------------

AT_CHECK([java -jar $abs_top_builddir/convjars/vw4tools.jar -Tsample02 -o], 0, [[{
  "entities" : [ {
    "child_entities" : {
      "add" : [ "10000000c9123456" ]
    },
    "description" : "sample02 test FA",
    "edit_type" : "add",
    "name" : "sample_02",
    "tags" : [ "@PACKAGE@-@VERSION@-@BUILDID@" ],
    "type" : "storageport"
  } ],
  "version" : "1"
}
]],[stderr])

AT_CLEANUP()



AT_SETUP(local testcase)
dnl      --------------

AT_CHECK([if test x@USERTESTCASE@ = xmissing ; then exit 77; fi])

AT_CLEANUP()



AT_SETUP(Doxygen confirmation of marked-up content)
dnl      -----------------------------------------

AT_CHECK([if test x@DOXYGEN@ = xmissing ; then exit 77; fi])
AT_CHECK([make -C $abs_top_builddir doc], 0, [ignore],[stderr])
dnl used to put the errors at the bottom of the output
AT_CHECK([cat stderr], 0, [],[])

AT_CLEANUP()


